<!-- DataPicker -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>
<!-- DataTables -->
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.7/css/jquery.dataTables.css">
<script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.7/js/jquery.dataTables.js"></script>
<style>
 input#datepicker{
 	width:100px;
 	display: inline;
 	vertical-align:top;
}
</style>
<?php
    		//Génération de la liste des increment_id des commmandes et récupération d'un tableau des données
    		if(isset($_GET['date_debut'])){
    			$orderid_array=get_list_orderid();
    			$date_debut=$_GET['date_debut'];
    			$date_fin =end_month($date_debut);
    			$data=data_facturation($date_debut,$date_fin);
    		}
?>

<body>
  <div id="canvas" class="container theme-showcase" role="main">
    <div class="page-header">
      <h2>Facturation du <input type="text" class="form-control" id="datepicker" placeholder="Cliquez pour sélectionner la date" value="<?php echo $date_debut?>"> au <?php echo $date_fin?></h2>
    </div>
    <div id="filter"><label>Sélectionnez le commerçant:</label></div>
    <div class="row">
    	<div id="data" class="col-sm-12">
	    	<table class="display dt-responsive no-wrap" id="data_facturation">
		    	<thead>
		    		<tr>
			    		<th >Date</th>
			    		<th colspan="2">#Commande</th>
			    		<th>Commerçant</th>
			    		<th colspan="3">Commande Client (Produits)</th>
<!-- 			    		<th colspan="3">Reçu Client (Produits)</th>
 -->			    		<th colspan="3">Avoir (Produits)</th>
			    		<th colspan="3">Commission APDC</th>
			    		<th colspan="3">Versement Commerçant</th>
			    	</tr>
			    	<tr>
			    		<th></th>
			    		<th>init.</th>
			    		<th>fin.</th>
			    		<th class="sort"></th>
			    		<th class="float">TTC</th>
			    		<th class="float">HT</th>
			    		<th class="float">TVA</th>
			    		<!-- <th>TTC</th>
			    		<th>HT</th>
			    		<th>TVA</th> -->
			    		<th class="float">TTC</th>
			    		<th class="float">HT</th>
			    		<th class="float">TVA</th>
			    		<th class="float">TTC</th>
			    		<th class="float">HT</th>
			    		<th class="float">TVA</th>
			    		<th class="float">TTC</th>
			    		<th class="float">HT</th>
			    		<th class="float">TVA</th>
			    	</tr>
		    	</thead>
		    	<tbody>
		    		<?php foreach($data as $row){?>
		    		<tr>
		    			<?php foreach($row as $key=>$value){
		    				echo '<td>'.$value.'</td>';
		    			}?>
		    		</tr>
		    		<?php } ?>
		    	</tbody>
		    	<tfoot>
		    		<tr>
		    			<th colspan="4">Total</th>
			    		<th></th>
			    		<th></th>
			    		<th></th>
			    		<!-- <th></th>
			    		<th></th>
			    		<th></th> -->
			    		<th></th>
			    		<th></th>
			    		<th></th>
			    		<th></th>
			    		<th></th>
			    		<th></th>
			    		<th></th>
			    		<th></th>
			    		<th></th>
		    		</tr>
		    	</tfoot>
	    	</table>
    	</div>
    </div>
  </div>
</body>
<script>

$(function() {
  $( "#datepicker" ).datepicker({
    altField: "#datepicker",
    closeText: 'Fermer',
    prevText: 'Précédent',
    nextText: 'Suivant',
    currentText: 'Aujourd\'hui',
    monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],
    monthNamesShort: ['Janv.', 'Févr.', 'Mars', 'Avril', 'Mai', 'Juin', 'Juil.', 'Août', 'Sept.', 'Oct.', 'Nov.', 'Déc.'],
    dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
    dayNamesShort: ['Dim.', 'Lun.', 'Mar.', 'Mer.', 'Jeu.', 'Ven.', 'Sam.'],
    dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
    weekHeader: 'Sem.',
    dateFormat: 'dd/mm/yy',
  });
});

$(function(){
  $("#datepicker").change(function(){
    	window.location='index.php?module=facturation&action=view&date_debut='+this.value;
  });
});

/* Custom filtering function which will search data in column four between two values */
$.fn.dataTable.ext.search.push(
    function( settings, data, dataIndex ) {
        var min = parseInt( $('#min').val(), 10 );
        var max = parseInt( $('#max').val(), 10 );
        var age = parseFloat( data[2] ) || 0; // use data for the age column
 
        if ( ( isNaN( min ) && isNaN( max ) ) ||
             ( isNaN( min ) && age <= max ) ||
             ( min <= age   && isNaN( max ) ) ||
             ( min <= age   && age <= max ) )
        {
            return true;
        }
        return false;
    }
);

$(document).ready(function() {
    var table=$('#data_facturation').DataTable({
    	initComplete: function () {
            this.api().columns(['.sort']).every(function () {
                var column = this;
                var select = $('<select><option value=""></option></select>')
                    .appendTo( $('#filter') )
                    .on( 'change', function () {
                        var val = $.fn.dataTable.util.escapeRegex(
                            $(this).val()
                        );
 
                        column
                            .search( val ? '^'+val+'$' : '', true, false )
                            .draw();
                    } );
 
                column.data().unique().sort().each( function ( d, j ) {
                    select.append( '<option value="'+d+'">'+d+'</option>' )
                } );
            });
        },

        "footerCallback": function ( row, data, start, end, display ) {
            var api = this.api(), data;
 
            // Remove the formatting to get integer data for summation
            var intVal = function ( i ) {
                return typeof i === 'string' ?
                    i.replace(/[\$,]/g, '')*1 :
                    typeof i === 'number' ?
                        i : 0;
            };

 			this.api().columns(['.float']).every(function (){
 				var index = this.index();
	            // Total over all pages
	            // total = api
	            //     .column( index )
	            //     .data()
	            //     .reduce( function (a, b) {
	            //         return intVal(a) + intVal(b);
	            //     } );
	            // total=total.toFixed(2);
	 
	            // Total over this page
	            pageTotal = api
	                .column( index, { page: 'current'} )
	                .data()
	                .reduce( function (a, b) {
	                    return intVal(a) + intVal(b);
	                }, 0 );

	            pageTotal=pageTotal.toFixed(2);

	            // Update footer
	            $( api.column( index ).footer() ).html(pageTotal);
	        });
        }
    } );

});
</script>