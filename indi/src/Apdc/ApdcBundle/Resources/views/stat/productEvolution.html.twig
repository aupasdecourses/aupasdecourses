{% extends 'ApdcApdcBundle::base.html.twig' %}
{% use 'ApdcApdcBundle::menu/default.html.twig' %}

{% block body %}

<div class="container-fluid">
    <div class="page-header">
        <h2>Evolution des produits du <input type="text" class="form-control" id="datepickerProductEvolution" placeholder="Cliquez pour selectionner la date" value="{{ date_debut }}"> au <input type="text" class="form-control" id="datepickerEndProductEvolution" placeholder="Cliquez ici pour selectionner la date" value="{{ date_fin }}"> avec le sku <input type="text" class="form-control" id="skuProductEvolution" placeholder="Cliquez pour selectionner le sku" value="{{ sku }}"></h2>
    </div>

 

    <div id="graph"></div>

</div>

{% endblock %}
{% block css_product_evolution %}

    <style>
        .axis { font: 14px sans-serif; }

        .line {
            fill: none;
            stroke: steelblue;
            stroke-width: 2px;
        }
    </style>

{% endblock %}
{% block javascript_product_evolution %}
    <script type="text/javascript" src="//d3js.org/d3.v4.min.js"></script>
    <script type="text/javascript">
    
        $(function() {
            $( "#datepickerProductEvolution" ).datepicker({
                altField: "#datepickerProductEvolution",
                closeText: 'Fermer',
                prevText: 'Précédent',
                nextText: 'Suivant',
                currentText: 'Aujourd\'hui',
                monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],
                monthNamesShort: ['Janv.', 'Févr.', 'Mars', 'Avril', 'Mai', 'Juin', 'Juil.', 'Août', 'Sept.', 'Oct.', 'Nov.', 'Déc.'],
                dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
                dayNamesShort: ['Dim.', 'Lun.', 'Mar.', 'Mer.', 'Jeu.', 'Ven.', 'Sam.'],
                dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
                weekHeader: 'Sem.',
                dateFormat: 'dd/mm/yy',
            });
            $( "#datepickerEndProductEvolution" ).datepicker({
                altField: "#datepickerEndProductEvolution",
                closeText: 'Fermer',
                prevText: 'Précédent',
                nextText: 'Suivant',
                currentText: 'Aujourd\'hui',
                monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],
                monthNamesShort: ['Janv.', 'Févr.', 'Mars', 'Avril', 'Mai', 'Juin', 'Juil.', 'Août', 'Sept.', 'Oct.', 'Nov.', 'Déc.'],
                dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
                dayNamesShort: ['Dim.', 'Lun.', 'Mar.', 'Mer.', 'Jeu.', 'Ven.', 'Sam.'],
                dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
                weekHeader: 'Sem.',
                dateFormat: 'dd/mm/yy',
            });
        });
    
        $(function(){
            $("#skuProductEvolution").change(function(){
                window.location='{{ path('productEvolution') }}?date_debut='+$("#datepickerProductEvolution").val()+'&date_fin='+$("#datepickerEndProductEvolution").val()+'&sku='+this.value;
            });
        });

    </script>

    <script type="text/javascript">

        // set the dimensions and margins of the graph
    var margin = {top: 30, right: 60, bottom: 200, left: 30},
        width = 1800 - margin.left - margin.right,
        height = 800 - margin.top - margin.bottom;

    // parse the date / time
    var parseTime = d3.timeParse("%d/%m/%Y %H");

    // set the ranges
    var x = d3.scaleTime().range([0, width]);
    var y = d3.scaleLinear().range([height, 0]);

    // define the line
    var valueline = d3.line()
        .x(function(d) { return x(d.createdOn); })
        .y(function(d) { return y(d.prixPublic); });

    // add the svg canvas
    var svg = d3.select("#graph").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    // Get the data
    var json_data = {{ json_products|raw }};
    data = JSON.parse(JSON.stringify(json_data));

    // format the data
    data.forEach(function(d) {
        d.createdOn = parseTime(d.createdOn);
        d.prixPublic = +d.prixPublic;
    });

    // Scale the range of the data
    x.domain(d3.extent(data, function(d) { return d.createdOn; }));
    y.domain([0, d3.max(data, function(d) { return d.prixPublic; })]);

    // Add the valueline path.
    svg.append("path")
        .data([data])
        .attr("class", "line")
        .attr("d", valueline);

    // Add the scatterplot
    svg.selectAll("dot")
        .data(data)
        .enter().append("circle")
        .attr("r", 3.5)
        .attr("cx", function(d) { return x(d.createdOn); })
        .attr("cy", function(d) { return y(d.prixPublic); });

    // Add the X Axis
     svg.append("g")
        .attr("class", "axis")
        .attr("transform", "translate(0," + height + ")")
        .call(d3.axisBottom(x)
        .tickFormat(d3.timeFormat("%d/%m/%Y %H")))
        .selectAll("text")  
        .style("text-anchor", "end")
        .attr("dx", "-.8em")
        .attr("dy", ".15em")
        .attr("transform", "rotate(-65)");

    // Add the Y Axis
    svg.append("g")
        .attr("class", "axis")
        .call(d3.axisLeft(y));

    </script>

{% endblock %}
